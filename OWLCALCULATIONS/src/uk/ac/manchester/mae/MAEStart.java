/* Generated By:JJTree: Do not edit this line. MAEStart.java */
package uk.ac.manchester.mae;

public class MAEStart extends SimpleNode {
	public MAEStart(int id) {
		super(id);
	}

	public MAEStart(ArithmeticsParser p, int id) {
		super(p, id);
	}

	/** Accept the visitor. * */
	@Override
	public Object jjtAccept(ArithmeticsParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	@Override
	public String toString() {
		StringBuilder toReturn = new StringBuilder();
		Node previousChild = null;
		for (Node child : this.children) {
			boolean isFirstBinding = child instanceof MAEBinding
					&& !(previousChild instanceof MAEBinding);
			if (isFirstBinding) {
				toReturn.append("{");
			}
			boolean isLastBinding = previousChild != null
					&& previousChild instanceof MAEBinding
					&& !(child instanceof MAEBinding);
			if (isLastBinding) {
				toReturn.append("}->");
			}
			if (child instanceof MAEStoreTo) {
				toReturn.append(" STORETO <");
				toReturn.append(child.toString());
				toReturn.append(">");
			} else if (child instanceof MAEmanSyntaxClassExpression) {
				toReturn.append(" APPLIESTO <");
				toReturn.append(child.toString());
				toReturn.append(">");
			} else {
				toReturn.append(" ");
				toReturn.append(child.toString());
			}
			previousChild = child;
		}
		toReturn.append(";");
		return toReturn.toString();
	}
}
