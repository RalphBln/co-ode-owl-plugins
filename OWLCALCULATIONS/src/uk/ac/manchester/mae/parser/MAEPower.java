/* Generated By:JJTree: Do not edit this line. MAEPower.java */
package uk.ac.manchester.mae.parser;

public class MAEPower extends SimpleNode {
	private double base;
	private String baseIdentifier = null;
	private double exp;

	public MAEPower(int id) {
		super(id);
	}

	public MAEPower(ArithmeticsParser p, int id) {
		super(p, id);
	}

	/** Accept the visitor. */
	@Override
	public Object jjtAccept(ArithmeticsParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	public void setBase(double base) {
		this.base = base;
	}

	public double getBase() {
		return this.base;
	}

	public void setBaseIdentifier(String string) {
		this.baseIdentifier = string;
	}

	public String getBaseIdentifier() {
		return this.baseIdentifier;
	}

	public void setExp(double d) {
		this.exp = d;
	}

	public double getExp() {
		return this.exp;
	}

	@Override
	public String toString() {
		String toReturn = "";
		toReturn += this.baseIdentifier == null ? new Double(this.base)
				: this.baseIdentifier;
		toReturn += "^" + new Double(this.exp);
		return toReturn;
	}

	@Override
	public boolean equals(Object obj) {
		// equals and hashcode are the same as for superclass
		return super.equals(obj);
	}

	@Override
	public int hashCode() {
		// equals and hashcode are the same as for superclass
		return super.hashCode();
	}
}
