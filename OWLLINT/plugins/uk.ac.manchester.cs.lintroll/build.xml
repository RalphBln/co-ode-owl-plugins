<?xml version="1.0"?> 
<project name="lintroll plugin" default="bundle" basedir="..">
  <property file="${basedir}/uk.ac.manchester.cs.lintroll/build.properties"/>
  <property name="src" location="${basedir}/uk.ac.manchester.cs.lintroll/src"/>
  <property name="classes" location="${basedir}/uk.ac.manchester.cs.lintroll/classes"/>
  <property name="source" location="1.5"/>
  
  
  <property name="jardest" location="${dist}/plugins/uk.ac.manchester.cs.lintroll.jar"/>
  <property name="releasedownloads" location="/Users/luigi/Documents/workspace/PROTEGEDOCS/WebContent/lintRoll/downloads" />	
  <property name="releasejardest" location="${releasedownloads}/uk.ac.manchester.cs.lintroll.jar"/>
  <property name="releasezipsourcedest" location="${releasedownloads}/uk.ac.manchester.cs.lintroll-src.zip"/>	
	<property name="releaselintjarname" value="lint.jar"/>
  <property name="releaselintjardest" location="${releasedownloads}/${releaselintjarname}"/>	
  
	<path id = "lintapi.classpath"> 
		<dirset dir="${owlapi.home}" >
			<include name="${owlapi.bin}"/>
		</dirset>
		<dirset dir="${oppl.home}" >
			<include name="${oppl.bin}"/>
		</dirset>
		<dirset dir="${protege.home}" >
					<include name="${protege.bin}"/>
				</dirset>
		<fileset dir="${junit.home}">
			<include name="junit.jar"/>
		</fileset>
	</path>
	
  <target name="init"> 
    <echo message="---------------Building the Bundle-------------"/>
  	
    <mkdir dir="${classes}"/>
  	<delete dir = "${projectLocation}/release" ></delete>
  </target>
	

	

  <target name="bundle" depends="init, javacc">

  	<delete dir="${dist}/configuration/org.eclipse.core.runtime"/>
  	<delete dir="${dist}/configuration/org.eclipse.osgi"/>
  	<mkdir dir="${classes}/lib"/>
  	<delete>
  		<fileset dir="${dist}/configuration/">
  			<include name="*.log"/>
  		</fileset>
  	</delete>
  	<copy toFile="${classes}/plugin.xml" file="${basedir}/uk.ac.manchester.cs.lintroll/plugin.xml" overwrite="true" />
  	<copy overwrite="true" todir="${classes}/lib">
  		<fileset dir="${basedir}/uk.ac.manchester.cs.lintroll/lib"/>
  	</copy>

  	<copy overwrite="true" todir="${classes}">
  		<fileset dir="${basedir}/uk.ac.manchester.cs.lintroll/resources"/>
  	</copy>
    <jar basedir = "${classes}"
         jarfile  = "${jardest}"
         manifest = "${basedir}/uk.ac.manchester.cs.lintroll/META-INF/MANIFEST.MF" update="true"/>
  </target> 

<target name="release" depends="bundle,compileAPI">
	<copy overwrite="true" tofile="${releasejardest}" file="${jardest}"/>
	<zip update="true" zipfile="${releasezipsourcedest}" basedir="${src}"/>
	<copy overwrite="true" tofile="${releaselintjardest}" file="${projectLocation}/release/${releaselintjarname}"/>
	<copy overwrite="true" todir="${releasedownloads}" file="${basedir}/uk.ac.manchester.cs.lintroll/update.properties"/>
	
</target>	

	<!-- ====================================
		target: javaCC
		builds the JavaCC java files.
	=========================================-->
	<target name="javacc">
		<exec executable="sh" dir="${srcAPI}/org/coode/oppl/lint/syntax">
			<arg line="/Applications/javacc-4.2/bin/jjtree oppllint.jjt"/>
		</exec>
		<exec executable="sh" dir="${srcAPI}/org/coode/oppl/lint/syntax">
			<arg line="/Applications/javacc-4.2/bin/javacc oppllint.jj"/>
		</exec>
	</target>	
	
	<target name="compileAPI" depends="init">
		<mkdir dir="${projectLocation}/release"/>
		<mkdir dir="${projectLocation}/release/classes"/>
		<javac destdir="${projectLocation}/release/classes" failonerror="true" srcdir="${srcAPI}">
			<classpath refid ="lintapi.classpath"></classpath>
		</javac>
		<jar destfile="${projectLocation}/release/${releaselintjarname}" basedir="${projectLocation}/release/classes"></jar>
		<delete dir="${projectLocation}/release/classes"/>
	</target>
	

</project>
