?y:INDIVIDUAL BEGIN ADD $thisClass SubClassOf hasWorkingDay only {?y} END;
?x:CLASS BEGIN ADD ?x SubClassOf Thing END;

?x:CLASS BEGIN ADD $thisClass SubClassOf contains only (not ?x) END; A ?x free stuff;

?x:CLASS BEGIN ADD $thisClass SubClassOf contains only ($Free(?x)) END; A ?x free menu;

?x:CLASS BEGIN ADD $thisClass SubClassOf contains only ($Free(Meat)) END; A ?x free menu;

?x:CLASS BEGIN ADD $thisClass equivalentTo Serum_level and is_of some ?x END; A ?x serum;

?times:CONSTANT BEGIN ADD $thisClass equivalentTo Class1207586180125185000
and ObjectProperty1207587122413274000 some Class1207578772498374000
and has_magnitude value ?times END; ?times a day;

?howMany:CONSTANT BEGIN ADD Class1207586180125185000
and ObjectProperty1207587156371706000 some (Class1207582910639252000
                                             and has_magnitude value ?howMany) END; every ?howMany hours;




?howManyTimes:CONSTANT, ?forWhom:CLASS, ?what:CLASS
BEGIN ADD $thisClass equivalentTo 
Order
and ObjectProperty1207211297916604000 some (ObjectProperty1207144566553581000 some Class1205164038471138000
                                             and ObjectProperty1207144662279061000 some (has_freq_spec some ($EveryNHours(?howManyTimes))))
and ObjectProperty1207555354950300000 some ?what
and has_department some ?forWhom END; do ?what ?howManyTimes per hour for ?forWhom; 



?howManyTimes:CONSTANT, ?forWhom:CLASS, ?what:CLASS
BEGIN ADD $thisClass equivalentTo 
Order
and ObjectProperty1207211297916604000 some (ObjectProperty1207144566553581000 some Class1205164038471138000
                                             and ObjectProperty1207144662279061000 some (has_freq_spec some ($EveryNHours(?howManyTimes))))
and ObjectProperty1207555354950300000 some ?what
and has_department some ?forWhom END; do ?what ?howManyTimes per hour for ?forWhom; 

12,  Cardiology_department, Blood_culture)


?howManyTimes:CONSTANT, ?forWhom:CLASS, ?what:CLASS
BEGIN ADD $thisClass equivalentTo 
Order
and ObjectProperty1207211297916604000 some (ObjectProperty1207144566553581000 some Class1205164038471138000
                                             and ObjectProperty1207144662279061000 some (has_freq_spec some ($NewEveryNHours(?howManyTimes))))
and ObjectProperty1207555354950300000 some ?what
and has_department some ?forWhom END; do ?what ?howManyTimes per hour for ?forWhom; 


List<String> performComplete(OWLEditorKit owlEditorKit) #void: {}
{
	{
		return complete(owlEditorKit);
	}
}

JAVACODE
 List<String> complete(OWLEditorKit owlEditorKit){
	
	Token t;
	InstantiationPatternCompletionState state = new InstantiationPatternCompletionState(owlEditorKit);
	while(true){
		t = getToken(1);
		if (t.kind == EOF){
			break;
		}else{
			computeCompletions(state);
		}
	}
	return state.getSuggestions();	
}

void computeCompletions(InstantiationPatternCompletionState state) #void :{Token t;}

{
	LOOKAHEAD(2)
	
	<DOLLAR> t = <IDENTIFIER>{
		String patternName = t.image;
		state.setPatternName(patternName);
	}
	| t= <DOLLAR>{
		state.setDollarInserted();
	}
	
	| <CLOSEDPARENTHESYS>{
		state.endArgs();
	}
	|<COMMA>{
		state.commaInserted();
	}
	|t =<IDENTIFIER>{
		state.nextVariableValueSet(t.image);
	}
	|t =<INTEGER_LITERAL>{
		state.nextVariableValueSet(t.image);
	}
	
}




?reference:CLASS
BEGIN
ADD $thisClass subClassOf Class1217243097876793000
and ObjectProperty1216649624908762000 some ?reference 
END;
Short Clin Holder referencing ?reference;

?reference:CLASS
BEGIN
ADD $thisClass subClassOf Detail_clin_holder
and ObjectProperty1216649624908762000 some ?reference 
END;
Detailed Clin Holder referencing ?reference;


---------------------


?x:CLASS BEGIN ADD $thisClass equivalentTo contiene only (not ?x ) END;  A ?x free stuff; 

?x:CLASS BEGIN ADD $thisClass SubClassOf contiene only ($Free(?x) ) END;  A ?x free menu ; 

?x:CLASS[subClassOf Cibo] BEGIN ADD $thisClass equivalentTo contiene only (not ?x ) END;  A ?x free stuff;


?x:CLASS[subClassOf Menù], ?y:CLASS[subClassOf Cibo], ?z:CLASS=createIntersection(?y.VALUES)
SELECT ?y subClassOf Cibo WHERE ?y!=Cibo
BEGIN
 ADD ?x subClassOf contiene some ?z
END;


JAVACODE
OWLObject OWLExpression(Variable v) 
{
		Token t;
		String manSyntaxString="";
		while(true){
			t = getToken(1);
			if (t.kind==COMMA || t.kind==SEMICOLON || t.kind == EOF){
				break;
			}else{
				manSyntaxString += t.image+" ";
				t = getNextToken();
			}
		}

	VariableType type = v.getType();
	ExpressionParser expressionParser = new ExpressionParser(manSyntaxString, OPPLParser.getConstraintSystem(),OPPLParser.getOWLDataFactory(), OPPLParser.getOWLOntologyManager()); 
	try{
	OWLObject toReturn = type.accept(expressionParser);
	return toReturn;
	} catch(Exception e){
		throw new ParseException(e.getMessage());
	}
}
